<!DOCTYPE html>
<html lang="en">

<head>
    <title>Recover</title>
    <%- include('layout/header') %>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const socket = io();
                let recoverValue = null;
                let password = null;

                let hasRun = false;
                function handleResult(msg) {
                    const result = JSON.parse(msg.value);
                    const flag = msg.flag;
                    if (flag == 'check') {
                        const modalStatus = document.getElementById('wordsModal').style.display
                        const buttonStatus = document.getElementById('words-btn');
                        const statusP = document.getElementById('wordsPassword');
                        const buttonStatusC = document.getElementById('chars-btn');
                        const statusC = document.getElementById('charsPassword');
                        if (result.result == 0) {
                            const qPassword = "Q" + password;
                            if (!hasRun) {
                                console.log(modalStatus);
                                hasRun = true;
                                walletCheckAnother(qPassword);
                            }
                            if (modalStatus == '') {
                                statusC.style.borderBottomColor = 'green'
                                buttonStatusC.disabled = false;
                                buttonStatusC.style.cursor = 'pointer';
                            } else {
                                statusP.style.borderBottomColor = 'green'
                                buttonStatus.disabled = false;
                                buttonStatus.style.cursor = 'pointer';
                            }
                        } else {
                            if (modalStatus == '') {
                                buttonStatusC.disabled = true;
                                buttonStatusC.style.cursor = 'no-drop';
                                statusC.style.borderBottomColor = 'red'
                            } else {
                                buttonStatus.disabled = true;
                                buttonStatus.style.cursor = 'no-drop';
                                statusP.style.borderBottomColor = 'red'
                            }
                            buttonStatus.disabled = true;
                            buttonStatus.style.cursor = 'no-drop';
                            statusP.style.borderBottomColor = 'red'
                        }
                    }
                    if (flag == 'recover' && password) {
                        if (result.result == 0) {
                            let actionPath = '';
                            if (result.seedpage == 0) {
                                actionPath = '/dashboard';
                            }
                            const form = document.createElement('form');
                            form.method = 'POST';
                            form.action = actionPath;

                            // Add password input to form
                            const passwordInput = document.createElement('input');
                            passwordInput.type = 'hidden';
                            passwordInput.name = 'password';
                            passwordInput.value = password;
                            form.appendChild(passwordInput);

                            // Add result input to form
                            const resultInput = document.createElement('input');
                            resultInput.type = 'hidden';
                            resultInput.name = 'result';
                            resultInput.value = JSON.stringify(result);
                            form.appendChild(resultInput);

                            document.body.appendChild(form);
                            form.submit();
                        } else {
                            Toastify({
                                text: result.display,
                                className: "warning",
                                style: {
                                    background: "red",
                                    color: "white",
                                }
                            }).showToast();
                        }
                    }
                }

                // Send command to QWallet
                function callRecoverQwallet(_password, _recoverValue) {
                    password = _password;
                    socket.emit('run', { command: `addseed ${password},${_recoverValue}`, flag: 'recover' });
                }

                socket.on('result', handleResult);

                function wordsRecover(_wordsPassword) {
                    var inputs = document.querySelectorAll('.inputValue');
                    var inputValues = [];
                    var missingInput = false;
                    inputs.forEach(function (input) {
                        if (input.value.trim() === '') {
                            missingInput = true;
                            return;
                        }
                        inputValues.push(input.value);
                    });

                    if (missingInput) {
                        Toastify({
                            text: "Enter the missing value!",
                            className: "warning",
                            style: {
                                background: "red",
                                color: "white",
                            }
                        }).showToast();
                        return; // Exit the function
                    }

                    var wordsValue = inputValues.join(' ');

                    if (wordsValue) {
                        const isWordsChecked = $('#words-checkbox').is(':checked')
                        if (isWordsChecked) {
                            callRecoverQwallet(_wordsPassword, wordsValue);
                        } else {
                            Toastify({
                                text: "Please accept below the condition.",
                                className: "warning",
                                style: {
                                    background: "red",
                                    color: "white",
                                }
                            }).showToast();
                        }
                    } else {
                        Toastify({
                            text: "Please type your seed.",
                            className: "warning",
                            style: {
                                background: "red",
                                color: "white",
                            }
                        }).showToast();
                    }
                }

                function charsRecover(_charsPassword) {
                    const _charsValue = document.getElementById('seedChars').value;
                    if (_charsValue && _charsValue.length === 55) {
                        const isCharsChecked = $('#chars-checkbox').is(':checked')
                        if (isCharsChecked) {
                            callRecoverQwallet(_charsPassword, _charsValue);
                        } else {
                            Toastify({
                                text: "Please accept below the condition.",
                                className: "warning",
                                style: {
                                    background: "red",
                                    color: "white",
                                }
                            }).showToast();
                        }
                    } else {
                        Toastify({
                            text: "Please check your seed.",
                            className: "warning",
                            style: {
                                background: "red",
                                color: "white",
                            }
                        }).showToast();
                    }
                }

                function walletCheck(_password) {
                    password = _password;
                    socket.emit('run', { command: `checkavail ${_password}`, flag: 'check' })
                }

                function walletCheckAnother(_password) {
                    password = _password;
                    socket.emit('run', { command: `checkavail ${_password}`, flag: 'check' })
                }

                function handleChange(_password) {
                    hasRun = false;

                    walletCheck(_password);
                }

                $('#wordsPassword').on('input', function (event) {
                    let validate = $('#wordsPassword').val();
                    if (validate != '') {
                        handleChange(validate);
                    } else {
                        console.log("object");
                        let statusOther = document.getElementById('wordsPassword');
                        statusOther.style.borderBottomColor = 'red';
                    }
                });

                $('#confirmWordsPassword').on('input', function () {
                    let CPstatusOther = document.getElementById('confirmWordsPassword');
                    let statusOtherStyle = document.getElementById('wordsPassword').style.borderBottomColor;
                    const wordsPassword = document.getElementById('wordsPassword').value;
                    const confirmWordsPassword = document.getElementById('confirmWordsPassword').value;
                    if (wordsPassword == confirmWordsPassword && wordsPassword != '' && confirmWordsPassword != '') {
                        CPstatusOther.style.borderBottomColor = statusOtherStyle
                    } else if (wordsPassword != confirmWordsPassword && confirmWordsPassword != '') {
                        CPstatusOther.style.borderBottomColor = 'red'
                    }
                })

                $('#charsPassword').on('input', function (event) {
                    let validate = $('#charsPassword').val();
                    if (validate != '') {
                        handleChange(validate);
                    } else {
                        let statusOther = document.getElementById('charsPassword');
                        statusOther.style.borderBottomColor = 'red';
                    }
                });

                $('#confirmCharsPassword').on('input', function () {
                    let CPstatusOther = document.getElementById('confirmCharsPassword');
                    let statusOtherStyle = document.getElementById('charsPassword').style.borderBottomColor;
                    const charsPassword = document.getElementById('charsPassword').value;
                    const confirmCharsPassword = document.getElementById('confirmCharsPassword').value;
                    console.log("object");
                    if (charsPassword == confirmCharsPassword && charsPassword != '' && confirmCharsPassword != '') {
                        CPstatusOther.style.borderBottomColor = statusOtherStyle
                    } else if (charsPassword != confirmCharsPassword && confirmCharsPassword != '') {
                        CPstatusOther.style.borderBottomColor = 'red'
                    }
                })

                $('#words-btn').click(() => {

                    const wordsPassword = document.getElementById('wordsPassword').value;
                    const confirmWordsPassword = document.getElementById('confirmWordsPassword').value;

                    if (wordsPassword == confirmWordsPassword && wordsPassword != '' && confirmWordsPassword != '') {
                        wordsRecover(wordsPassword);
                    } else {
                        Toastify({
                            text: "Please type your password correctly.",
                            className: "warning",
                            style: {
                                background: "red",
                                color: "white",
                            }
                        }).showToast();
                    }
                })

                $('#chars-btn').click(() => {

                    const charsPassword = document.getElementById('charsPassword').value;
                    const confirmCharsPassword = document.getElementById('confirmCharsPassword').value;

                    if (charsPassword == confirmCharsPassword && charsPassword != '' && confirmCharsPassword != '') {
                        const modified = 'Q' + charsPassword;
                        charsRecover(modified);
                    } else {
                        Toastify({
                            text: "Please type your password correctly.",
                            className: "warning",
                            style: {
                                background: "red",
                                color: "white",
                            }
                        }).showToast();
                    }

                })

                // Add event listener to the link with class 'backPage'
                document.querySelector('.backPage').addEventListener('click', function (event) {
                    event.preventDefault(); // Prevent the default action of following the link
                    const form = document.createElement('form');
                    form.method = 'GET';
                    form.action = '/login';
                    document.body.appendChild(form);
                    form.submit();
                });
            })
        </script>
</head>

<body>
    <div class="container">
        <img class="logo" src="./assets/images/logo.png" width="100px" />
        <h2>Restore</h2>
        <div class="description">
            There are two ways to restore your previous account.
        </div>
        <div class="seed-words" id="seed-words" data-toggle="modal" data-target="#wordsModal">
            <div class="seed-words-img">
                <img src="./assets/images/seed.png" alt="">
            </div>
            <p>Restore With 24 words</p>
            <!-- <span class="fa fa-angle-double-right"></span> -->
        </div>
        <div class="seed-words" id="seed-chars" data-toggle="modal" data-target="#charsModal">
            <div class="seed-words-img">
                <img src="./assets/images/chars.png" alt="">
            </div>
            <p>Restore With 55 Chars</p>
            <!-- <span class="fa fa-angle-double-right"></span> -->
        </div>
        <a class="backPage" href="#">
            <!-- <span class="fa fa-arrow-left"></span> -->
            <p>Go to back</p>
        </a>
    </div>
    <!-- 24 words Modal -->
    <div class="modal fade" id="wordsModal" tabindex="-1" role="dialog" aria-labelledby="wordsModalTitle"
        aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Input your 24 words</h5>
                    <div class="config">
                        <svg data-dismiss="modal" aria-label="Close"
                            class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-vubbuv" focusable="false"
                            aria-hidden="true" viewBox="0 0 24 24" data-testid="CloseIcon">
                            <path fill="#fff"
                                d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z">
                            </path>
                        </svg>
                    </div>
                </div>
                <div class="modal-body" id="wordsModal">
                    <div class="start-q-password">
                        <p>Enter the password for the wallet you want to restore.</p>
                        <div class="password-group">
                            <input type="password" name="" id="wordsPassword" placeholder="Type your password">
                            <input type="password" name="" id="confirmWordsPassword"
                                placeholder="Re-type your password">
                        </div>
                    </div>
                    <div class="start-q-password">
                        <p>Please check your seed again before entering.</p>
                        <ul>
                            <% for (var i=1; i <=24; i++) { %>
                                <li>
                                    <span>
                                        <%= i %>
                                    </span>
                                    <input type="text" name="<%= 'input_' + i %>" class="inputValue"
                                        id="<%= 'input_' + i %>">
                                </li>
                                <% } %>
                        </ul>
                    </div>
                    <div class="check">
                        <input type="checkbox" name="" id="words-checkbox">
                        <p>Please check again that you have entered it correctly.</p>
                    </div>
                    <button type="button" class="wordsModal-button" id="words-btn">Next</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Chars Modal -->
    <div class="modal fade" id="charsModal" tabindex="-1" role="dialog" aria-labelledby="charsModalTitle"
        aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Input your 55 chars</h5>
                    <div class="config">
                        <svg data-dismiss="modal" aria-label="Close"
                            class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-vubbuv" focusable="false"
                            aria-hidden="true" viewBox="0 0 24 24" data-testid="CloseIcon">
                            <path fill="#fff"
                                d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z">
                            </path>
                        </svg>
                    </div>
                </div>
                <div class="modal-body" id="charsModal">
                    <ul class="start-q">
                        <div class="start-q-password">
                            <p>Enter the password for the wallet you want to restore.</p>
                            <div class="password-group">
                                <input type="password" name="" id="charsPassword" placeholder="Type your password">
                                <input type="password" name="" id="confirmCharsPassword"
                                    placeholder="Re-type your password">
                            </div>
                        </div>
                        <div class="start-q-password">
                            <p>Please check your seed again before entering.</p>
                            <li>
                                <input type="text" name="" id="seedChars" placeholder="Enter your 55 chars seed">
                            </li>
                        </div>
                    </ul>
                    <div class="check">
                        <input type="checkbox" name="" id="chars-checkbox">
                        <p>Please check again that you have entered it correctly.</p>
                    </div>
                    <button type="button" class="charsModal-button" id="chars-btn">Next</button>
                </div>
            </div>
        </div>
    </div>
</body>

</html>